
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;                                                  // Lecture
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author HP
 */
public class Admin extends javax.swing.JFrame {

    Connection con = null;
    Statement stmt = null;
    ResultSet rs = null;
    
    
    /**
     * Creates new form Teacher
     */
    public Admin() {
        initComponents();
        con = databaseConnection.connection();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        multimedia = new javax.swing.JTextField();
        whiteboard = new javax.swing.JTextField();
        submit = new javax.swing.JButton();
        search = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        classid = new javax.swing.JComboBox<>();
        intake2 = new javax.swing.JLabel();
        intake1 = new javax.swing.JLabel();
        intake = new javax.swing.JTextField();
        date = new javax.swing.JTextField();
        logout = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        seat = new javax.swing.JTextField();
        reset = new javax.swing.JButton();
        table = new javax.swing.JButton();
        mainmenu = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        rtable = new javax.swing.JButton();
        subject = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        facultymember = new javax.swing.JTextField();
        intake3 = new javax.swing.JLabel();
        timeslot = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        backup = new javax.swing.JButton();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("ALLOCATION OF A CLASS");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("CLASSROOM NUMBER");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("CLASSROOM NAME");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setText("NO OF MULTIMEDIA PROJECTORS ");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setText("NO OF WHITEBOARDS ");

        id.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });

        multimedia.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        multimedia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multimediaActionPerformed(evt);
            }
        });

        whiteboard.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        whiteboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                whiteboardActionPerformed(evt);
            }
        });

        submit.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        submit.setText("SUBMIT");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        search.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        search.setText("SEARCH");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        update.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        update.setText("UPDATE");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        classid.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        classid.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "1 - ClassRoom", "2 - ClassRoom", "3 - ClassRoom", "4 - ClassRoom", "5 - ClassRoom" }));

        intake2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        intake2.setText("INTAKE");

        intake1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        intake1.setText("DATE");

        intake.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        intake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intakeActionPerformed(evt);
            }
        });

        date.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateActionPerformed(evt);
            }
        });

        logout.setText("LOGOUT");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText("NO OF SEATS (capasity) ");

        seat.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        seat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seatActionPerformed(evt);
            }
        });

        reset.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        reset.setText("NEW");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        table.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        table.setText("TABLE");
        table.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tableActionPerformed(evt);
            }
        });

        mainmenu.setText("MAIN MENU");
        mainmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainmenuActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 0));
        jLabel7.setText("(Select the classroom corresponding to the number)");

        rtable.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rtable.setText("Requesting table");
        rtable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rtableActionPerformed(evt);
            }
        });

        subject.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        subject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel8.setText("SUBJECT");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel9.setText("FACULTY MEMBER");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("(Lecture Name)");

        facultymember.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        facultymember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facultymemberActionPerformed(evt);
            }
        });

        intake3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        intake3.setText("TIME SLOTS");

        timeslot.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 102));
        jLabel11.setText("Format | 00.00 am - 00.00 pm");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(102, 102, 102));
        jLabel12.setText("Format | DD/MM/YEAR");

        backup.setBackground(new java.awt.Color(204, 0, 0));
        backup.setText("BACKUP");
        backup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(logout))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(intake3, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mainmenu)
                                    .addComponent(table)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jLabel3)
                                                    .addGap(235, 235, 235))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                            .addComponent(reset)
                                                            .addGap(18, 18, 18)
                                                            .addComponent(submit))
                                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(intake1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(intake2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel4)
                                                    .addComponent(jLabel5)
                                                    .addComponent(jLabel8)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabel9)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jLabel10))
                                                    .addComponent(jLabel6))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(timeslot, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(facultymember, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(classid, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(seat)
                                                .addComponent(whiteboard)
                                                .addComponent(multimedia)
                                                .addComponent(intake)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addGap(27, 27, 27)
                                                    .addComponent(update)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(delete))
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(43, 43, 43)
                                                    .addComponent(search))
                                                .addComponent(subject, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rtable, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(backup, javax.swing.GroupLayout.Alignment.TRAILING))))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(logout))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(classid, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(subject, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(facultymember, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(seat, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(whiteboard, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(multimedia, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(intake2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(intake, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(intake3)
                            .addComponent(timeslot, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(intake1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(submit)
                            .addComponent(reset)
                            .addComponent(update)
                            .addComponent(delete))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(backup)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rtable)
                        .addGap(18, 18, 18)
                        .addComponent(table)
                        .addGap(76, 76, 76)
                        .addComponent(mainmenu)
                        .addGap(26, 26, 26))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        // TODO add your handling code here:  
        try
        {
            stmt = con.createStatement();
            
            String sClassid = (String) classid.getSelectedItem();
            int sClassno = Integer.parseInt(id.getText());
            String sSubject = subject.getText();
            String sFacultymember = facultymember.getText();
            int sSeat = Integer.parseInt(seat.getText());
            int sWhiteboard = Integer.parseInt(whiteboard.getText());
            int sMultimedia = Integer.parseInt(multimedia.getText());
            int sIntake = Integer.parseInt(intake.getText()); 
            String sTimeslot = timeslot.getText();
            String sDate = date.getText();
            
                       
            String query = "INSERT INTO classroom (classid, id, subject, facultymember, seat, whiteboard, multimedia, intake, timeslot, date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            
            PreparedStatement preparedStmt = con.prepareStatement(query);
            preparedStmt.setString(1, sClassid);
            preparedStmt.setInt(2, sClassno);
            preparedStmt.setString(3, sSubject);
            preparedStmt.setString(4, sFacultymember);
            preparedStmt.setInt(5, sSeat);
            preparedStmt.setInt(6, sWhiteboard);
            preparedStmt.setInt(7, sMultimedia);
            preparedStmt.setInt(8, sIntake);
            preparedStmt.setString(9, sTimeslot);
            preparedStmt.setString(10, sDate);
           
            
            preparedStmt.execute();
            JOptionPane.showMessageDialog(null, "ADDED");
            
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_submitActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:   
        try
        {
            stmt = con.createStatement();
            
            int sSeat = Integer.parseInt(id.getText());
            
            String query = "SELECT * FROM classroom";
            
            rs = stmt.executeQuery(query);
           
            while(rs.next())
            {
                if(sSeat == rs.getInt("id"))
                {
                    classid.setSelectedItem(rs.getString("classid"));
                    subject.setText(rs.getString("subject"));
                    facultymember.setText(rs.getString("facultymember"));
                    seat.setText(String.format("%s", rs.getInt("seat")));
                    multimedia.setText(String.format("%s", rs.getInt("whiteboard")));
                    whiteboard.setText(String.format("%s", rs.getInt("multimedia")));
                    intake.setText(String.format("%s", rs.getInt("intake")));
                    timeslot.setText(rs.getString("timeslot"));  
                    date.setText(rs.getString("date"));  
    
                }
            }
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_searchActionPerformed

    public void Reset()
    {
        classid.setSelectedItem("");
        id.setText("");
        subject.setText("");
        facultymember.setText("");
        seat.setText("");
        multimedia.setText("");
        whiteboard.setText("");
        intake.setText("");
        timeslot.setText("");
        date.setText("");
        
    }
    
    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        try
        {
            stmt = con.createStatement();
            
            
           String sClassid  = (String) classid.getSelectedItem();
            int sClassno = Integer.parseInt(id.getText());
            String sSubject = subject.getText();
            String sFacultymember = facultymember.getText();
            int sSeat = Integer.parseInt(seat.getText());
            int sWhiteboard = Integer.parseInt(whiteboard.getText());
            int sMultimedia = Integer.parseInt(multimedia.getText());
            int sIntake = Integer.parseInt(intake.getText()); 
            String sTimeslot = timeslot.getText();
            String sDate = date.getText();
           
           
            
           
            
            String query = "UPDATE classroom SET classid = ?, subject = ?, facultymember = ?, seat = ?, whiteboard = ?, multimedia = ?, intake = ?, timeslot = ?, date = ? WHERE id = ?";
            
            PreparedStatement preparedStmt = con.prepareStatement(query);
            
            preparedStmt.setString(1, sClassid);
            preparedStmt.setString(2, sSubject);
             preparedStmt.setString(3, sFacultymember);
            preparedStmt.setInt(4, sSeat);
            preparedStmt.setInt(5, sWhiteboard);
            preparedStmt.setInt(6, sMultimedia);
            preparedStmt.setInt(7, sIntake);
            preparedStmt.setString(8, sTimeslot);
            preparedStmt.setString(9, sDate);
            preparedStmt.setInt(10, sClassno);
            
            preparedStmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "UPDATED");
            
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        try
        {
            stmt = con.createStatement();
            
            int sClassno = Integer.parseInt(id.getText());
            
            String query = "DELETE FROM classroom WHERE id ='"+sClassno+"' ";
            
            stmt.executeUpdate(query);
            
            Reset();
            JOptionPane.showMessageDialog(null, "DELETED");
            
            
            
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void multimediaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multimediaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_multimediaActionPerformed

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idActionPerformed

    private void whiteboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_whiteboardActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_whiteboardActionPerformed

    private void intakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intakeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_intakeActionPerformed

    private void dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        Login log = new Login();
        log.setVisible(true);
    }//GEN-LAST:event_logoutActionPerformed

    private void seatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seatActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        Reset();
    }//GEN-LAST:event_resetActionPerformed

    private void tableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tableActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        AllAdmin view = new AllAdmin();
        view.setVisible(true);
    }//GEN-LAST:event_tableActionPerformed

    private void mainmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainmenuActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        Home view = new Home();
        view.setVisible(true);
    }//GEN-LAST:event_mainmenuActionPerformed

    private void rtableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rtableActionPerformed
        // TODO add your handling code here:
         setVisible(false);
        AllLecture view = new AllLecture();
        view.setVisible(true);
    }//GEN-LAST:event_rtableActionPerformed

    private void subjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subjectActionPerformed

    private void facultymemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facultymemberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_facultymemberActionPerformed

    private void backupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backupActionPerformed
        // TODO add your handling code here:
        MysqlBackUpProgram();
    }//GEN-LAST:event_backupActionPerformed

    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backup;
    private javax.swing.JComboBox<String> classid;
    private javax.swing.JTextField date;
    private javax.swing.JButton delete;
    private javax.swing.JTextField facultymember;
    private javax.swing.JTextField id;
    private javax.swing.JTextField intake;
    private javax.swing.JLabel intake1;
    private javax.swing.JLabel intake2;
    private javax.swing.JLabel intake3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton logout;
    private javax.swing.JButton mainmenu;
    private javax.swing.JTextField multimedia;
    private javax.swing.JButton reset;
    private javax.swing.JButton rtable;
    private javax.swing.JButton search;
    private javax.swing.JTextField seat;
    private javax.swing.JTextField subject;
    private javax.swing.JButton submit;
    private javax.swing.JButton table;
    private javax.swing.JTextField timeslot;
    private javax.swing.JButton update;
    private javax.swing.JTextField whiteboard;
    // End of variables declaration//GEN-END:variables

String filename = null;



public void MysqlBackUpProgram(){
SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
        String dbHost = "localhost"; 
	String dbPort = "3306";
        String dbName = "schoolmanagement";
        String dbUser = "root";
        String dbPass = "";
        String dumpExe = "C:\\Program Files\\MySQL\\MySQL Server 8.0\\bin\\mysqldump.exe";
        String dumpSavePath = "c:\\New folder\\";
        String fileName = "backUpFile_"+sdf.format(new Date().getTime())+".sql";
        Backupdbtosql(dbHost, dbPort, dbUser, dbPass, dbName, dumpExe, dumpSavePath, fileName);
}       
public void Backupdbtosql(String host,String port,String user,String password,String dbName,String dumpExe,String dumpSavePath,String fileName){
    try {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");

	        String batchCommand;
	        if (password != ""){
                    batchCommand = dumpExe + 
		        		 " -h " + host + 
		        		 " --port " + port + 
		        		 " -u " + user + 
		        		 " --password=" + password + 
		        		 " --add-drop-database -B " + dbName + 
		        		 " -r \"" + dumpSavePath + "" + "backup"+new Date().getTime()+".sql";
                }else{
                batchCommand = dumpExe + 
	        			 " -h " + host + 
	        			 " --port " + "3306" + 
	        			 " -u " + user + 
	        			 " --add-drop-database -B " + dbName + 
	        			 " -r \"" + dumpSavePath + "" + "backup"+new Date().getTime()+".sql";    
                }    
    System.out.println("Execute Commond - " +batchCommand);
	        System.out.println("Processing.. "+ "STARTED " +sdf.format(new Date()));
	        Date sDate = new Date();
	        Process runtimeProcess = Runtime.getRuntime().exec(batchCommand);
	        int processComplete = runtimeProcess.waitFor();
	        
	        System.out.println("Processing.. "+ "END " +sdf.format(new Date()));
	        Date eDate = new Date();
	        long duration =  eDate.getTime() - sDate.getTime();
	        int seconds=(int) ((duration/1000)%60);
	        long minutes=((duration-seconds)/1000)/60;
	        System.err.println("TOTAL TIME : " + minutes +" minutes :: ");
	        System.err.print(seconds +" seconds :: ");
	        System.err.print(duration +" milliseconds");
                if (processComplete == 0) {
	            System.out.println("Backup Complete");
                    JOptionPane.showMessageDialog(this, "Backup Complete", "Successfully", JOptionPane.INFORMATION_MESSAGE); 
	        } else {
	            System.out.println("Backup Failure");
                    JOptionPane.showMessageDialog(this, "Backup Failed", "Error", JOptionPane.ERROR_MESSAGE); 
	        }
    } catch (Exception ex) {
      System.err.println(ex.getMessage());
    }
}
static void Backupdbtosql() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }





}
